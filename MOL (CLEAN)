#include "stdafx.h"
#include <iostream> 
#include <stdlib.h>
#include <string>
#include <stdio.h>
#include <chrono>
#include <thread>
#include <conio.h>
#include <windows.h> 
#include <random>
#include <cstdlib>
#include <fstream>
#include <time.h>
#include "TextHandler.h"
using namespace std;
using namespace this_thread;
using namespace chrono;

//Allows for use of colored text
void setcolor(unsigned short color) {
	HANDLE hcon = GetStdHandle(STD_OUTPUT_HANDLE);
	SetConsoleTextAttribute(hcon, color);
}

//Handles the main menu graphic
class Handler {
public:
#define M_N1 setcolor(2); cout << "   |MINES OF LEYWN|"; setcolor(7); cout << "                    ########### "; setcolor(5); cout << "Character Creator"; setcolor(7); cout << " ###########" << endl; setcolor(6); cout << "        V.2.1                          "; setcolor(7); cout << "#     (1) Gender and Name.              #" << endl; cout << "                                       #     (2) Class                         #" << endl; setcolor(3); cout << "   Save Data"; setcolor(7); cout << ": Null"; cout << "                     #     (3) Race                          #" << endl; cout << "   Press '0' for help                  #     (4) Save/Load                     #" << endl; cout << "                                       #     (5) "; setcolor(9); cout << "Start Game                    "; setcolor(7); cout << "#" << endl; cout << "                                       #     (6) Options                       #" << endl; cout << "                                       #########################################" << endl; cout << "                                                                               " << endl;  cout << "                                       _____________________________           " << endl; 	cout << "                                       | Game made by: "; setcolor(3); cout << "Davis Hughes "; setcolor(7); cout << "|          " << endl; cout << "                                       | Written by: "; setcolor(3); cout << "Davis Hughes "; setcolor(7); cout << "  |          " << endl; 	cout << "                                       | Code by: "; setcolor(3); cout << "Davis Hughes "; setcolor(7); cout << "     |          " << endl; cout << "                                       |____________________________|          " << endl; cout << "      "; setcolor(4); cout << "LOG                                                                      " << endl; setcolor(7); cout << "-------------------------------------------------------------------------------" << endl;
#define Main_Screen cout << "=========================================================================" << endl, cout << "|"; setcolor(4); cout << " Hp"; setcolor(7); cout << "- " << p1.hp << " |" << "     | Lvl- " << p1.lvl << " |" << endl, cout << "| Gp- " << p1.gold << " |" << "     | Status- " << p1.status << " |" << endl, cout << "=========================================================================" << endl;
};

//Handles the first two loading screens of the game as well as the vector loading.
class GameLoad {
public:
	void titleCard() {

		system("COLOR 0F");
		cout << "============================================================================================================= " << endl;
		sleep_for(seconds(1));
		cout << "=  =====  =========================================    ========  ============================================ " << endl;
		sleep_for(seconds(1));
		cout << "=   ===   ========================================  ==  =======  ============================================ " << endl;
		sleep_for(seconds(1));
		cout << "=  =   =  ========================================  ===========  ============================================ " << endl;
		sleep_for(seconds(1));
		cout << "=  == ==  ==  ==  = ====   ====   =========   ===    ==========  =========   ===  =  ==  =   =  ==  = ======= " << endl;
		sleep_for(seconds(1));
		cout << "=  =====  ======     ==  =  ==  =  =======     ===  ===========  ========  =  ==  =  ==  =   =  ==     ======" << endl;
		sleep_for(seconds(1));
		cout << "=  =====  ==  ==  =  ==     ===  =========  =  ===  ===========  ========     ===    ===   =   ===  =  ======" << endl;
		sleep_for(seconds(1));
		cout << "=  =====  ==  ==  =  ==  =======  ========  =  ===  ===========  ========  ========  ===   =   ===  =  ======" << endl;
		sleep_for(seconds(1));
		cout << "=  =====  ==  ==  =  ==  =  ==  =  =======  =  ===  ===========  ========  =  ==  =  ==== === ====  =  ====== " << endl;
		sleep_for(seconds(1));
		cout << "=  =====  ==  ==  =  ===   ====   =========   ====  ===========        ===   ====   ===== === ====  =  ====== " << endl;
		sleep_for(seconds(1));
		cout << "============================================================================================================= " << endl;
		cout << endl;
		cout << endl;
		cout << endl;
		cout << endl;
		cout << endl;
		cout << endl;
		cout << endl;
		cout << endl;
		cout << endl;
		sleep_for(seconds(5));
		system("CLS");
		system("color 3");
		cout << "=================================================================" << endl;
		cout << "                    Game Loading...                              " << endl;
		cout << "=================================================================" << endl << endl;
		sleep_for(seconds(3));
		system("CLS");
		cout << "=================================================================" << endl;
		cout << "                    Game Loading...                              " << endl;
		cout << "=================================================================" << endl << endl;
		cout << "[][][]" << endl;
		sleep_for(seconds(3));
		system("CLS");
		cout << "=================================================================" << endl;
		cout << "                    Game Loading...                              " << endl;
		cout << "=================================================================" << endl << endl;
		cout << "[#][][]" << endl;
		sleep_for(seconds(1));
		system("CLS");
		cout << "=================================================================" << endl;
		cout << "                    Game Loading...                              " << endl;
		cout << "=================================================================" << endl << endl;
		cout << "[#][#][]" << endl;
		sleep_for(seconds(1));
		system("CLS");
		cout << "=================================================================" << endl;
		cout << "                    Game Loading...                              " << endl;
		cout << "=================================================================" << endl << endl;
		cout << "[#][#][#]" << endl;
		sleep_for(seconds(1));
		cout << "" << endl;
		sleep_for(seconds(1));
		system("CLS");


	}
};
GameLoad gl;

//Basic player class
class player {
public:
	void GetName() {
		system("CLS");
		cout << "What shall your name be?" << endl;
		cout << "> ";
		cin >> name;
		cout << endl << endl;
		cout << "Fantastic to meet you " << name << "!" << endl << endl;
		system("PAUSE");
	}
	void GetGender() {
		system("CLS");
		cout << "Would you like to be a boy or a girl?" << endl;
		cout << "1.) Male" << endl;
		cout << "2.) Female" << endl;
		char ch;
		ch = _getche();
		system("CLS");
		switch (toupper(ch)) {
		case '1': 
			cout << "And a strapping young gentleman at that!" << endl;
			Gender = "Male";
			break;
		case '2':
			cout << "Not a doubt was in my mind!" << endl << endl;
			Gender = "Female";
			break;
		}
		system("PAUSE");

	}
	void GetClass() {

	}
	void GetRace() {

	}
	int lvl;
	int age;
	int hp;
	string name;
	string Gender;
};
player p1;

//Character creation 
void Creation() {
	char ch;
	system("CLS");
		M_N1;
		cout << p1.name;
		cout << endl;
		cout << p1.Gender;
	ch = _getche();
	while (true) {
		switch (toupper(ch)) {

		case '1':
			p1.GetName();
			p1.GetGender();
			Creation();
			break;
		default:
			Creation();
			break;

		}
}
}

int main()
{
	//Loads intro
	//gl.titleCard();
	Creation();

	//Main game loop
	while (true) {

	}
}

//Example code for loading data from a txt file
void DataLoad() {
	system("CLS");
	string line;
	ifstream myfile("DATA.txt");
	if (myfile.is_open())
	{

		while (getline(myfile, line)) {
			cout << line << endl;
		}
		myfile.close();
	}
	system("PAUSE");
}
